name: Flutter CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 1' # Weekly run on Monday

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flutter-version: [3.0.6, 3.1.0, 3.2.0, 3.3.0, 3.4.0, 3.5.0, 3.6.0, 3.7.0, 3.8.0, 3.9.0, 4.0.0]
        include:
          - flutter-version: 3.0.6
            android-ndk-version: 21.3.6528147
          - flutter-version: 3.1.0
            android-ndk-version: 22.1.7171670
          - flutter-version: 3.2.0
            android-ndk-version: 22.1.7171670
          - flutter-version: 3.3.0
            android-ndk-version: 23.1.7779620
          - flutter-version: 3.4.0
            android-ndk-version: 23.1.7779620
          - flutter-version: 3.5.0
            android-ndk-version: 23.1.7779620
          - flutter-version: 3.6.0
            android-ndk-version: 23.1.7779620
          - flutter-version: 3.7.0
            android-ndk-version: 23.1.7779620
          - flutter-version: 3.8.0
            android-ndk-version: 23.1.7779620
          - flutter-version: 3.9.0
            android-ndk-version: 23.1.7779620
          - flutter-version: 4.0.0
            android-ndk-version: 23.1.7779620

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Set up Android NDK
        uses: android-actions/setup-ndk@v1
        with:
          ndk-version: ${{ matrix.android-ndk-version }}

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}

      - name: Cache Flutter
        uses: actions/cache@v2
        with:
          path: |
            ~/.pub-cache
            .flutter-plugins
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test --coverage

      - name: Run SonarQube scan
        uses: sonarsource/sonarqube-scan-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/

      - name: Set up Fastlane
        run: sudo gem install fastlane -NV

      - name: Deploy to Play Store
        run: fastlane android deploy
        env:
          JSON_KEY: ${{ secrets.JSON_KEY }}
          PACKAGE_NAME: ${{ secrets.PACKAGE_NAME }}
